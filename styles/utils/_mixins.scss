@use "sass:math";
@function rem($size) {
  @if unit($size) == "px" {
    @error "‚ùå Don't use units while entering size in rem funciton";
  }
  $val: math.div($size, 16);
  @return #{$val}rem;
}
@mixin flex-center($gap: null, $direction: null) {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: $gap;
  @if $direction != null {
    flex-direction: #{$direction};
  }
  @if $gap != null {
    gap: $gap;
  }
}
@mixin flex-between() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
@mixin w-h-full($x: 0, $y: 0) {
  width: 100%;
  height: 100%;
  @if $x != null and $y != null {
    padding: #{$y} #{$x};
  } @else if $x != null {
    padding: 0 #{$x};
  } @else if $y != null {
    padding: #{$y} 0;
  }
}
@mixin button-styles($bg: "transparent", $pad: "10px 10px", $font: 16) {
  background-color: #{$bg};
  border: none;
  font-size: rem($font);
  padding: #{$pad};
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}
@mixin hover-effect($initial-width){
   &::before,
      &::after {
        content: "";
        position: absolute;
        bottom: 0;
        height: 1px;
        background-color: red;
        width: $initial-width;
        transition: width 0.4s ease;
      }
      &::before {
        right: 50%;
        transform-origin: right;
      }
      &::after {
        left: 50%;
        transform-origin: left;
      }

      &:hover {
        &::before,
        &::after {
          width: 50%;
        }
      }
}

@mixin line-before($color: "black",$width: 4rem, $h: 0.1rem){
       &::before {
        content: "";
        position: absolute;
        width: #{$width};
        height: $h;
        background-color: #{$color};
        left: 0;
        top: 50%;
      }
}
